# 
# Report generation script generated by Vivado
# 

proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
proc start_step { step } {
  set stopFile ".stop.rst"
  if {[file isfile .stop.rst]} {
    puts ""
    puts "*** Halting run - EA reset detected ***"
    puts ""
    puts ""
    return -code error
  }
  set beginFile ".$step.begin.rst"
  set platform "$::tcl_platform(platform)"
  set user "$::tcl_platform(user)"
  set pid [pid]
  set host ""
  if { [string equal $platform unix] } {
    if { [info exist ::env(HOSTNAME)] } {
      set host $::env(HOSTNAME)
    }
  } else {
    if { [info exist ::env(COMPUTERNAME)] } {
      set host $::env(COMPUTERNAME)
    }
  }
  set ch [open $beginFile w]
  puts $ch "<?xml version=\"1.0\"?>"
  puts $ch "<ProcessHandle Version=\"1\" Minor=\"0\">"
  puts $ch "    <Process Command=\".planAhead.\" Owner=\"$user\" Host=\"$host\" Pid=\"$pid\">"
  puts $ch "    </Process>"
  puts $ch "</ProcessHandle>"
  close $ch
}

proc end_step { step } {
  set endFile ".$step.end.rst"
  set ch [open $endFile w]
  close $ch
}

proc step_failed { step } {
  set endFile ".$step.error.rst"
  set ch [open $endFile w]
  close $ch
}

set_msg_config  -ruleid {1}  -id {Project 1-564}  -string {{CRITICAL WARNING: [Project 1-564] A project save was requested while parsing the project. To prevent a partially loaded project from being committed to disk, this save will not occur.}}  -suppress 
set_msg_config  -ruleid {2}  -id {ProjectBase 1-489}  -string {{INFO: [ProjectBase 1-489] The host OS only allows 260 characters in a normal path. The project is stored in a path with more than 80 characters. If you experience issues with IP, Block Designs, or files not being found, please consider moving the project to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter.
Current project path is 'C:/Users/Malwi/Dropbox/studia-semestry/VI SEMESTR/FPGA/STATE MACHINE/_state_machine'}}  -suppress 
set_msg_config  -ruleid {3}  -id {IP_Flow 19-234}  -string {{INFO: [IP_Flow 19-234] Refreshing IP repositories}}  -suppress 
set_msg_config  -ruleid {4}  -id {IP_Flow 19-1704}  -string {{INFO: [IP_Flow 19-1704] No user IP repositories specified}}  -suppress 
set_msg_config  -ruleid {5}  -id {IP_Flow 19-2313}  -string {{INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2017.4/data/ip'.}}  -suppress 
set_msg_config  -ruleid {6}  -id {XSIM 43-3249}  -string {{ERROR: [XSIM 43-3249] File C:/Users/Malwi/Dropbox/studia-semestry/VI SEMESTR/FPGA/STATE MACHINE/_state_machine/state_machine_local_project.srcs/sources_1/new/state_machine.vhd, line 32. Unresolved signal "delay_lcd_counter" is multiply driven.}}  -suppress 

start_step write_bitstream
set ACTIVE_STEP write_bitstream
set rc [catch {
  create_msg_db write_bitstream.pb
  open_checkpoint FSM_routed.dcp
  set_property webtalk.parent_dir C:/Users/Malwi/Dropbox/PROGR/fpga/state_machine/state_machine/state_machine_local_project.cache/wt [current_project]
  catch { write_mem_info -force FSM.mmi }
  write_bitstream -force FSM.bit 
  catch {write_debug_probes -quiet -force FSM}
  catch {file copy -force FSM.ltx debug_nets.ltx}
  close_msg_db -file write_bitstream.pb
} RESULT]
if {$rc} {
  step_failed write_bitstream
  return -code error $RESULT
} else {
  end_step write_bitstream
  unset ACTIVE_STEP 
}

